version: '3.5'

services:

  multibot_eth_dydx_binance:
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    build:
      context: .
      dockerfile: "dockerfile.multibot"
    env_file:
      - .env.eth
    restart: always
    command: 'python3 multi_bot.py -c1 dydx -c2 binance'

  multibot_eth_dydx_apollox:
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    build:
      context: .
      dockerfile: "dockerfile.multibot"
    env_file:
      - .env.eth
    restart: always
    command: 'python3 multi_bot.py -c1 dydx -c2 apollox'

  multibot_eth_apollox_binance:
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    build:
      context: .
      dockerfile: "dockerfile.multibot"
    env_file:
      - .env.eth
    restart: always
    command: 'python3 multi_bot.py -c1 apollox -c2 binance'


  multibot_eth_apollox_kraken:
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    build:
      context: .
      dockerfile: "dockerfile.multibot"
    env_file:
      - .env.eth
    restart: always
    command: 'python3 multi_bot.py -c1 apollox -c2 kraken'

  multibot_eth_binance_kraken:
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    build:
      context: .
      dockerfile: "dockerfile.multibot"
    env_file:
      - .env.eth
    restart: always
    command: 'python3 multi_bot.py -c1 binance -c2 kraken'

  multibot_eth_dydx_kraken:
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    build:
      context: .
      dockerfile: "dockerfile.multibot"
    env_file:
      - .env.eth
    restart: always
    command: 'python3 multi_bot.py -c1 dydx -c2 kraken'
